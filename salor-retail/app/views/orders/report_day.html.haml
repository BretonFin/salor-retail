= stylesheet_link_tag 'invoice_default'
= stylesheet_link_tag 'invoice_default_print', :media => 'print'

- categories = @report['categories']
- taxes = @report['taxes']
- paymentmethods = @report['paymentmethods']
- regular_payment_methods = @report['regular_payment_methods']
- refunds  =  @report['refunds']
- revenue =   @report['revenue']
- transactions   = @report['transactions']
- transactions_sum   = @report['transactions_sum']
- calculated_drawer_amount =   @report['calculated_drawer_amount']
- orders_count = @report['orders_count']
- categories_sum = @report['categories_sum']

= raw content_box_top(t("menu.reports"))

= form_tag orders_report_day_path, :class => 'no-print', :id => 'date_range', :method => :get do
  %div.tools
    = label 'from', t('.from')
    = select_date(@from, :prefix => 'from', :order => [:day,:month,:year])
    %br
    = label 'to', t('.to')
    = select_date(@to, :prefix => 'to', :order => [:day,:month,:year])
    %br
    %select{:id => 'employee_select', :name => 'employee_id' }= options_from_collection_for_select(@employees, 'id', 'username', params[:employee_id])
    %br
    %br
    = submit_tag t('orders.report.display'), :onclick => '$("#progress").show()', :id => 'display_report_day'
    %br
    %br
    %br
    = salor_icon(:print, {:onclick => 'Salor.printPage();'}, 32, t('.a4'))
    = salor_icon(:print, {:onclick => "print_url(Register.thermal_printer,'/vendors/render_end_of_day_receipt',decodeURIComponent($('#date_range').serialize()));" }, 32, t('.thermal'))
    %br
    %img{ :id => 'progress', :src => '/images/upload.gif', :style => 'display: none;' }

.paper-invoice.invoice_print
  .header-page-one
    - if Vendor.find_by_id(GlobalData.salor_user.meta.vendor_id).logo_image
      %img.vendorlogo.floatright{ :src => "/vendors/#{ GlobalData.salor_user.meta.vendor_id }/logo_invoice" }
    
  %div.clear

  %div
    %h2== #{ t '.title' } #{ l @from, :format => :just_day } - #{ l @to, :format => :just_day }<br />#{ @vendor.name }<br />#{ @employee.name_with_username if @employee }

    %p== #{ t '.count_orders' }: #{ orders_count }



    - [[:pos,'.sales'], [:neg,'.payments']].each do |i|

      %h3= t i[1]

      %table.striped-table2
        %tr
          %th.left= t '.sums_by_category'
          %th.table-center= t '.gross'
          %th.table-center= t '.net'
          %th.table-center= t '.tax'
        - categories[i[0]].to_a.each do |c|
          %tr
            %td.left= c[0].empty? ? t('printr.eod_report.no_category') : c[0]
            %td.table-center= number_to_currency c[1][:gro]
            %td.table-center= number_to_currency c[1][:net]
            %td.table-center= number_to_currency c[1][:gro] - c[1][:net]

      %table.striped-table2
        %tr
          %th.left= t '.sums_by_tax_profile'
          %th.table-center= t '.gross'
          %th.table-center= t '.net'
          %th.table-center= t '.tax'
        - taxes[i[0]].to_a.each do |t|
          %tr
            %td.left= t[0]
            %td.table-center= number_to_currency t[1][:gro]
            %td.table-center= number_to_currency t[1][:net]
            %td.table-center= number_to_currency t[1][:gro] - t[1][:net]

      %table.striped-table2
        %tr
          %th.left= t '.sums_by_payment_methods'
          %th.table-center
        - paymentmethods[i[0]].to_a.each do |p|
          - next unless regular_payment_methods.include?(p[0].to_s)
          %tr
            %td.left= t p[0]
            %td{:id => "#{i[0]}_#{p[0]}_sum", :class => "table-center"}= number_to_currency p[1]

      %p{:id => "#{i[0]}_sum_gross"}== #{ t '.sum_gross' }: #{ number_to_currency categories_sum[i[0]][:gro] }
      %p{:id => "#{i[0]}_sum_net"}== #{ t '.sum_net' }: #{ number_to_currency categories_sum[i[0]][:net] }



    %br
    %br
    %br
    %br
    %h3= t '.noncash-refunds'
    %table.striped-table2
      %tr
        %th.left= t '.type'
        %th.table-center= t '.gross'
      - paymentmethods[:refund].to_a.each do |p|
        - next if regular_payment_methods.include?(p[0].to_s)
        %tr
          %td.left= t p[0]
          %td.table-center= number_to_currency p[1]

    %p#noncash_refunds_sum_gross== #{ t '.sum_gross' }: #{ number_to_currency refunds[:noncash][:gro] }
    %p#noncash_refunds_sum_net== #{ t '.sum_net' }: #{ number_to_currency refunds[:noncash][:net] }



    %h3= t '.cash-refunds'
    %table.striped-table2
      %tr
        %th.left= t '.type'
        %th.left= t '.id'
        %th.table-center= t '.gross'
      - transactions.to_a.each do |d|
        - next unless d[1][:is_refund]
        %tr
          %td.left= t ('.' + d[1][:tag])
          %td.left= d[1][:notes]
          %td.right= number_to_currency( -d[1][:amount])

    %p== #{ t '.sum_gross' }: #{ number_to_currency refunds[:cash][:gro] }
    %p== #{ t '.sum_net' }: #{ number_to_currency refunds[:cash][:net] }


    %h3= t '.revenue'
    %p== #{ t '.gross' }: #{ number_to_currency revenue[:gro] }
    %p== #{ t '.net' }: #{ number_to_currency revenue[:net] }


    - if @from == @to.beginning_of_day
      %h3= t '.transactions'

      %table.striped-table2
        %tr
          %th.left= t '.transaction_tag'
          %th.left
          %th.left= t '.time'
          %th.right= t '.drop'
          %th.right= t '.payout'
        - transactions.to_a.each do |d|
          - next if d[1][:is_refund]
          %tr
            %td.left= t ('.' + d[1][:tag])
            %td.left= d[1][:notes]
            %td.left= l d[1][:time], :format => :just_time
            %td.right= number_to_currency d[1][:amount] if d[1][:drop]
            %td.right= number_to_currency d[1][:amount] unless d[1][:drop]

      %p== #{ t '.sum_transactions' }: #{ number_to_currency transactions_sum[:total] }


      %h3= t '.cash_drawer'

      - if @from.beginning_of_day == Time.now.beginning_of_day and @employee
        %p== #{ I18n.t("printr.eod_report.system_drawer_amount") }: #{ number_to_currency @employee.get_drawer.amount }

      %p== #{ I18n.t("printr.eod_report.calculated_drawer_amount") }: #{ number_to_currency calculated_drawer_amount }

      - if calculated_drawer_amount.round(2) != 0
        %p
          %b= t 'printr.eod_report.warning_drawer_amount_not_zero'

